/*! angularchat 25-02-2014 */
angular.module("ChatApp",["ng","ngRoute"]).config(["$routeProvider",function($routeProvider){$routeProvider.when("/login",{templateUrl:"/view/login.html",controller:"LoginCtrl"}).when("/index",{templateUrl:"/view/roomList.html",controller:"HomeCtrl",resolve:{"this":function($location,ChatBackend){return""===ChatBackend.getUsername()?void $location.path("/login"):void 0}}}).when("/room/:roomId",{templateUrl:"/view/room.html",controller:"RoomCtrl",resolve:{"this":function($location,ChatBackend){return""===ChatBackend.getUsername()?void $location.path("/login"):void 0}}}).when("/about",{templateUrl:"/view/about.html",controller:"AboutCtrl"}).otherwise({redirectTo:"/login"})}]),angular.module("ChatApp").factory("socket",["$rootScope",function($rootScope){var socket=io.connect("http://localhost:8123");return{on:function(eventName,callback){socket.on(eventName,function(){var args=arguments;$rootScope.$apply(function(){callback.apply(socket,args)})})},emit:function(eventName,data,callback){socket.emit(eventName,data,function(){var args=arguments;$rootScope.$apply(function(){callback&&callback.apply(socket,args)})})}}}]),angular.module("ChatApp").factory("ChatBackend",["$q","socket",function($q,socket){var username="",userList=[],roomList=[];return{getUsername:function(){return username},getUserList:function(){return userList},getRoomList:function(){return roomList},isListening:!1,startListeners:function(){this.isListening=!0,socket.on("userlist",function(list){console.log(list);for(var tempList=[],i=0;i<list.length;i++){var user={name:list[i]};tempList.push(user)}userList.length=0,userList.push.apply(userList,tempList)}),socket.on("roomlist",function(list){console.log(list);var tempList=[];for(var roomId in list){var totalUsers=0,isThisUserConnected=!1;for(var key in list[roomId].users)list[roomId].users.hasOwnProperty(key)&&(totalUsers++,key===username&&(isThisUserConnected=!0));var room={id:roomId,topic:list[roomId].topic,password:list[roomId].password,users:list[roomId].users,usersCount:totalUsers,isConnect:isThisUserConnected,ops:list[roomId].obs,banned:list[roomId].banned,locked:list[roomId].locked,messages:list[roomId].messageHistory};tempList.push(room)}roomList.length=0,roomList.push.apply(roomList,tempList)})},signIn:function(name){var deferred=$q.defer();return socket.emit("adduser",name,function(available){available&&(username=name),deferred.resolve(available)}),deferred.promise},joinRoom:function(roomId){if(""!==roomId){roomId=roomId.split(" ").join("_");var deferred=$q.defer();return socket.emit("joinroom",{room:roomId},function(data){deferred.resolve(data)}),deferred.promise}},getRoom:function(roomId){for(var roomIndex=-1,i=0;i<roomList.length;i++)roomId===roomList[i].id&&(roomIndex=i);return-1===roomIndex?null:roomList[roomIndex]},sendMessage:function(roomId,message){""!==roomId&&""!==message&&(message.length>200&&(message=message.substr(0,200)),console.log("emit(sendmsg: { roomName: ["+roomId+"], msg: ["+message+"] });"),socket.emit("sendmsg",{roomName:roomId,msg:message}))},updateRoomList:function(){socket.emit("rooms")},updateUserList:function(){socket.emit("users")}}}]),angular.module("ChatApp").controller("AboutCtrl",["$scope",function(){}]),angular.module("ChatApp").controller("HomeCtrl",["$scope","$location","socket","ChatBackend",function($scope,$location,socket,ChatBackend){ChatBackend.isListening===!1&&ChatBackend.startListeners(),$scope.refreshRoomList=function(){ChatBackend.updateRoomList()},$scope.refreshUserList=function(){console.log(ChatBackend.getUserList()),ChatBackend.updateUserList(),console.log(ChatBackend.getUserList())},$scope.joinNewRoom=function(roomId){console.log("joinNewRoom("+roomId+");"),roomId=roomId.split(" ").join("_"),ChatBackend.joinRoom(roomId)?$location.path("/room/"+roomId):console.log("ERROR: joinRoom:false")},$scope.userList=ChatBackend.getUserList(),$scope.roomList=ChatBackend.getRoomList(),$scope.username=ChatBackend.getUsername(),ChatBackend.updateUserList(),ChatBackend.updateRoomList()}]),angular.module("ChatApp").controller("LoginCtrl",["$scope","$location","ChatBackend",function($scope,$location,ChatBackend){$scope.takenUsername="",$scope.selectNick=function(username){$scope.username=username},$scope.signInClick=function(username){ChatBackend.signIn(username).then(function(available){available?$location.path("/index"):$scope.takenUsername=username})},$scope.prevUsername=ChatBackend.getUsername()}]),angular.module("ChatApp").controller("RoomCtrl",["$scope","$routeParams","socket","ChatBackend",function($scope,$routeParams,socket,ChatBackend){socket.on("updateusers",function(roomId,users,ops){console.log("updateusers: ["+roomId+","+users+","+ops+"]")}),socket.on("updatetopic",function(data){console.log("updatetopic: "+data)}),socket.on("servermessage",function(type,roomId,username){console.log("servermessage: ["+type+","+roomId+","+username+"]")}),socket.on("updatechat",function(roomId,messageHistory){console.log("updatechat: ["+roomId+"]"),roomId===$scope.currentRoom.id&&($scope.messages=messageHistory)}),$scope.msgSubmit=function(message){var msg=message;$scope.message="",ChatBackend.sendMessage($scope.currentRoom.id,msg)};var room=ChatBackend.getRoom($routeParams.roomId);null!==room&&($scope.currentRoom=room,$scope.messages=room.messages)}]);