/*! angularchat 26-02-2014 */
angular.module("ChatApp",["ng","ngRoute"]).config(["$routeProvider",function($routeProvider){$routeProvider.when("/login",{templateUrl:"/view/login.html",controller:"LoginCtrl"}).when("/index",{templateUrl:"/view/roomList.html",controller:"HomeCtrl",resolve:{"this":function($location,ChatBackend){return""===ChatBackend.getUsername()?void $location.path("/login"):void 0}}}).when("/room/:roomId",{templateUrl:"/view/room.html",controller:"RoomCtrl",resolve:{"this":function($location,ChatBackend){return""===ChatBackend.getUsername()?void $location.path("/login"):void 0}}}).when("/about",{templateUrl:"/view/about.html",controller:"AboutCtrl"}).otherwise({redirectTo:"/login"})}]),angular.module("ChatApp").factory("socket",["$rootScope",function($rootScope){var socket=io.connect("http://localhost:8123");return{on:function(eventName,callback){socket.on(eventName,function(){var args=arguments;$rootScope.$apply(function(){callback.apply(socket,args)})})},emit:function(eventName,data,callback){socket.emit(eventName,data,function(){var args=arguments;$rootScope.$apply(function(){callback&&callback.apply(socket,args)})})}}}]),angular.module("ChatApp").factory("ChatBackend",["$q","socket",function($q,socket){var username="",userList=[],roomList=[],activeRoomId="",activeRoomMsg=[],activeRoomUserList=[];return{getUsername:function(){return username},getUserList:function(){return userList},getRoomList:function(){return roomList},getActiveRoomId:function(){return activeRoomId},getActiveRoomMsg:function(){return activeRoomMsg},getActiveRoomUserList:function(){return activeRoomUserList},isListening:!1,startListeners:function(){this.isListening=!0,socket.on("userlist",function(list){console.log(list);for(var tempList=[],i=0;i<list.length;i++){var user={name:list[i]};tempList.push(user)}userList.length=0,userList.push.apply(userList,tempList)}),socket.on("roomlist",function(list){console.log(list);var tempList=[];for(var roomId in list){var isThisUserConnected=!1,tempUserList=[];for(var user in list[roomId].users)tempUserList.push(user),user===username&&(isThisUserConnected=!0);var isThisUserOp=!1,tempOpList=[];for(var op in list[roomId].ops)tempOpList.push(op),op===username&&(isThisUserOp=!0);var room={id:roomId,topic:list[roomId].topic,password:list[roomId].password,users:tempUserList,usersCount:tempUserList.length,isConnect:isThisUserConnected,ops:tempOpList,opsCount:tempOpList.length,isOp:isThisUserOp,banned:list[roomId].banned,locked:list[roomId].locked,messages:list[roomId].messageHistory};tempList.push(room),activeRoomId===room.id&&(activeRoomMsg.length=0,activeRoomMsg.push.apply(activeRoomMsg,room.messages),activeRoomUserList.length=0,activeRoomUserList.push.apply(activeRoomUserList,room.ops),activeRoomUserList.push.apply(activeRoomUserList,room.users))}roomList.length=0,roomList.push.apply(roomList,tempList)}),socket.on("updateusers",function(roomId,users,ops){if(roomId===activeRoomId){var key,tempList=[];for(key in ops)tempList.push(key);for(key in users)tempList.push(key);activeRoomUserList.length=0,activeRoomUserList.push.apply(activeRoomUserList,tempList)}}),socket.on("updatetopic",function(room,topic,username){console.log("updatetopic: ["+room+","+topic+","+username+"]")}),socket.on("servermessage",function(type,roomId,username){console.log("servermessage: ["+type+","+roomId+","+username+"]")}),socket.on("updatechat",function(roomId,messageHistory){console.log("updatechat: ["+roomId+"]"),roomId===activeRoomId&&(activeRoomMsg.length=0,activeRoomMsg.push.apply(activeRoomMsg,messageHistory))})},signIn:function(name){var deferred=$q.defer();return socket.emit("adduser",name,function(available){available&&(username=name),deferred.resolve(available)}),deferred.promise},joinRoom:function(roomId){if(""!==roomId){roomId=roomId.split(" ").join("_");var deferred=$q.defer();return socket.emit("joinroom",{room:roomId},function(success){success&&(activeRoomId=roomId,socket.emit("rooms")),deferred.resolve(success)}),deferred.promise}},getRoom:function(roomId){for(var roomIndex=-1,i=0;i<roomList.length;i++)roomId===roomList[i].id&&(roomIndex=i);return-1===roomIndex?null:roomList[roomIndex]},partRoom:function(roomId){""!==roomId?socket.emit("partroom",roomId):""!==activeRoomId&&socket.emit("partroom",activeRoomId)},disconnect:function(){socket.emit("disconnect")},sendMessage:function(message){""!==activeRoomId&&""!==message&&(message.length>200&&(message=message.substr(0,200)),socket.emit("sendmsg",{roomName:activeRoomId,msg:message}))},kickUser:function(name,roomId){if(console.log("kickUser("+name+", "+roomId+")"),""!==name&&""!==roomId){var deferred=$q.defer();return socket.emit("kick",{user:name,room:roomId},function(success){console.log("kick?: "+success),deferred.resolve(success)}),deferred.promise}},banUser:function(name,roomId){if(console.log("banUser("+name+", "+roomId+")"),""!==name&&""!==roomId){var deferred=$q.defer();return socket.emit("ban",{user:name,room:roomId},function(success){console.log("ban?: "+success),deferred.resolve(success)}),deferred.promise}},updateRoomList:function(){socket.emit("rooms")},updateUserList:function(){socket.emit("users")}}}]),angular.module("ChatApp").controller("AboutCtrl",["$scope",function(){}]),angular.module("ChatApp").controller("HomeCtrl",["$scope","$location","ChatBackend",function($scope,$location,ChatBackend){ChatBackend.isListening===!1&&ChatBackend.startListeners(),$scope.refreshRoomList=function(){ChatBackend.updateRoomList()},$scope.refreshUserList=function(){ChatBackend.updateUserList()},$scope.joinNewRoom=function(roomId){roomId=roomId.split(" ").join("_"),ChatBackend.joinRoom(roomId)?$location.path("/room/"+roomId):console.log("ERROR: joinRoom:false")},$scope.partRoom=function(roomId){ChatBackend.partRoom(roomId),ChatBackend.updateRoomList()},$scope.userList=ChatBackend.getUserList(),$scope.roomList=ChatBackend.getRoomList(),$scope.username=ChatBackend.getUsername(),ChatBackend.updateUserList(),ChatBackend.updateRoomList()}]),angular.module("ChatApp").controller("LoginCtrl",["$scope","$location","ChatBackend",function($scope,$location,ChatBackend){$scope.takenUsername="",$scope.selectNick=function(username){$scope.username=username},$scope.signInClick=function(username){ChatBackend.signIn(username).then(function(available){available?$location.path("/index"):$scope.takenUsername=username})},$scope.prevUsername=ChatBackend.getUsername()}]),angular.module("ChatApp").controller("RoomCtrl",["$scope","$routeParams","$location","ChatBackend",function($scope,$routeParams,$location,ChatBackend){$scope.msgSubmit=function(message){var msg=message;$scope.message="",ChatBackend.sendMessage(msg)},$scope.partRoom=function(){ChatBackend.partRoom(""),$location.path("/index")},$scope.kick=function(username,roomId){ChatBackend.kickUser(username,roomId)},$scope.ban=function(username,roomId){ChatBackend.banUser(username,roomId)};var room=ChatBackend.getRoom($routeParams.roomId),myUsername=ChatBackend.getUsername();if(null!==room){$scope.currentRoom=room;var key;for(key in room.banned)key===myUsername&&$location.path("/index");for(key in room.ops)key===myUsername&&($scope.isOp=!0)}else setTimeout(function(){var room=ChatBackend.getRoom($routeParams.roomId);if(null!==room){$scope.currentRoom=room;var key;for(key in room.banned)key===myUsername&&$location.path("/index");for(key in room.ops)key===myUsername&&($scope.isOp=!0);$scope.$apply()}},1e3);$scope.userList=ChatBackend.getActiveRoomUserList(),$scope.messages=ChatBackend.getActiveRoomMsg()}]);